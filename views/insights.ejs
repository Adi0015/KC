<!-- include login.ejs -->
<br>
<br>
<h1>Insights</h1>
<div id="academicYearFilter"></div> <!-- Academic Year Filter -->
<label for="branchFilter">Branch:</label>
<select id="branchFilter" onchange="filterData()">
  <option value="">All</option>
  <option value="Andheri">Andheri</option>
  <option value="Charkop">Charkop</option>
  <option value="Borivali">Borivali</option>
  <option value="Kandivali">Kandivali</option>
  <!-- Add more options as needed -->
</select>

<label for="standardFilter">Standard:</label>
<select id="standardFilter" onchange="filterData()">
  <option value="">All</option>
  <option value="Play Group">Play Group</option>
  <option value="Nursery">Nursery</option>
  <option value="Jr. KG">Jr. KG</option>
  <option value="Sr. KG">Sr. KG</option>
  <!-- Add more options as needed -->
</select>

<div class="childname">
  <label for="childNameFilter">Student Name:</label>
  <input type="text" id="childNameFilter" placeholder="Enter student name" oninput="filterData()">
</div>

<br>

<table id="data-table">
  <thead>
    <tr>
      <th>Unique Data</th>
      <th>Student Name</th>
      <th>Branch</th>
      <th>Standard</th>
      <th>Email</th>
      <th>WhatsApp no.</th>
      <th>Admission Date</th>
      <th>Total Fees</th>
      <th>Fees Paid</th>
      <th>Remaining Fees</th>
      <th>Action</th>
      <th>Receipt</th>
    </tr>
  </thead>
  <tbody>
    <% var filteredData=[]; %>
      <% var currentDate=new Date(); %>
        <% var currentYear=currentDate.getFullYear(); %>
          <% var academicYearStart=new Date(currentYear, 0, 1); %>
            <% var academicYearEnd=new Date(currentYear + 1, 0, 1); %>

              <% admissions.forEach(function(admission) { %>
                <% var admissionDate=new Date(admission.date); %>
                  <% var admissionYear=admissionDate.getFullYear(); %>
                    <% if (admissionYear===currentYear || admissionYear===currentYear + 1) { %>
                      <% filteredData.push(admission); %>
                        <tr>
                          <td>
                            <%= admission.uniqueid %>
                          </td>
                          <td class="editable" contenteditable="true" data-id="<%= admission.id %>"
                            data-field="childname">
                            <%= admission.childname %>
                          </td>
                          <td>
                            <%= admission.branch %>
                          </td>
                          <td>
                            <%= admission.standard %>
                          </td>
                          <td>
                            <%= admission.email %>
                          </td>
                          <td>
                            <%= admission.whatsapp %>
                          </td>
                          <td>
                            <%= admission.date.toLocaleDateString() %>
                          </td>
                          <td class="editable" contenteditable="true" data-id="<%= admission.id %>"
                            data-field="totalFees">
                            <%= admission.totalFees %>
                          </td>
                          <td class="editable" contenteditable="true" data-id="<%= admission.id %>"
                            data-field="feespaid">
                            <%= admission.feespaid %>
                          </td>
                          <td class="editable" contenteditable="true" data-id="<%= admission.id %>"
                            data-field="remainingFees">
                            <%= admission.totalFees - admission.feespaid %>
                          </td>
                          <td>
                            <button onclick="updateData('<%= admission.id %>')">Update</button>
                          </td>
                          <td>
                            <button
                              onclick="generateReceipt('<%= admission.childname %>', '<%= admission.branch %>', '<%= admission.standard %>', '<%= admission.email %>', '<%= admission.whatsapp %>', '<%= admission.totalFees %>','<%= admission.feespaid %>')">Generate
                              Receipt</button>
                          </td>
                        </tr>
                        <% } %>
                          <% }); %>
  </tbody>
</table>
<br>
<button class="revenue" onclick="sumFees()">Calculate Revenue</button>
<div id="fees-summary"></div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/vfs_fonts.js"></script>
<script src="/script/updateData.js"></script>
<script>
  // Calculate the academic year
  var currentDate = new Date();
  var currentYear = currentDate.getFullYear();
  var academicYear = currentYear.toString() + '-' + (currentYear + 1).toString();

  // Set the academic year filter text
  var academicYearFilterText = 'Academic Year: ' + academicYear;

  // Display the academic year filter text on the page
  var academicYearFilterElement = document.getElementById('academicYearFilter');
  academicYearFilterElement.innerText = academicYearFilterText;

  function filterData() {
    var branchFilter = document.getElementById('branchFilter').value.trim().toLowerCase();
    var standardFilter = document.getElementById('standardFilter').value.trim().toLowerCase();
    var childNameFilter = document.getElementById('childNameFilter').value.trim().toLowerCase();
    var rows = document.querySelectorAll('#data-table tbody tr');

    for (var i = 0; i < rows.length; i++) {
      var row = rows[i];
      var childName = row.getElementsByTagName('td')[0].innerText.trim().toLowerCase();
      var branch = row.getElementsByTagName('td')[1].innerText.trim().toLowerCase();
      var standard = row.getElementsByTagName('td')[2].innerText.trim().toLowerCase();

      if ((branchFilter && branch !== branchFilter) || (standardFilter && standard !== standardFilter) || (childNameFilter && childName.indexOf(childNameFilter) === -1)) {
        row.style.display = 'none';
      } else {
        row.style.display = '';
      }
    }
  }

  function sumFees() {
    var totalFeesSum = 0;
    var feesPaidSum = 0;
    var rows = document.querySelectorAll('#data-table tbody tr');

    for (var i = 0; i < rows.length; i++) {
      var row = rows[i];
      var totalFeesCell = row.getElementsByTagName('td')[8];
      var feesPaidCell = row.getElementsByTagName('td')[9];
      var totalFees = parseInt(totalFeesCell.innerText);
      var feesPaid = parseInt(feesPaidCell.innerText);
      var remainingfees = totalFees - feesPaid

      if (!isNaN(totalFees)) {
        totalFeesSum += totalFees;
      }
      
      if (!isNaN(feesPaid)) {
        feesPaidSum += feesPaid;
      }
    }

    var summaryDiv = document.getElementById('fees-summary');
    summaryDiv.innerText = "Total Fees: " + totalFeesSum + ", Amount Received: " + feesPaidSum + ", Remaing Amount :" + remainingfees ;
  }

  function generateReceipt(childName, branch, standard, email, whatsapp, totalFees, feesPaid) {
    // Calculate remaining fees
    var remainingFees = totalFees - feesPaid;

    // Create the PDF content definition
    var docDefinition = {
      content: [
        { text: 'KIDS CONCEPTS', style: 'header' },
        { text: 'Receipt for Admission', style: 'subheader' },
        '\n',
        { text: 'Child Name:', style: 'label' },
        { text: childName },
        { text: 'Branch:', style: 'label' },
        { text: branch },
        { text: 'Standard:', style: 'label' },
        { text: standard },
        { text: 'Email:', style: 'label' },
        { text: email },
        { text: 'WhatsApp no.:', style: 'label' },
        { text: whatsapp },
        { text: 'Total Fees:', style: 'label' },
        { text: totalFees },
        { text: 'Fees Paid:', style: 'label' },
        { text: feesPaid },
        { text: 'Remaining Fees:', style: 'label' },
        { text: remainingFees }
      ],
      styles: {
        header: {
          fontSize: 18,
          bold: true,
          alignment: 'center'
        },
        subheader: {
          fontSize: 16,
          bold: true,
          alignment: 'center'
        },
        label: {
          bold: true
        }
      }
    };

    // Generate the PDF
    pdfMake.createPdf(docDefinition).open();
  }
</script>