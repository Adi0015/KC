<!-- include login.ejs -->

<br>
<br>
<h1>Insights</h1>
<label for="branchFilter">Branch:</label>
<select id="branchFilter" onchange="filterData()">
  <option value="">All</option>
  <option value="Andheri">Andheri</option>
  <option value="Charkop">Charkop</option>
  <option value="Borivali">Borivali</option>
  <option value="Kandivali">Kandivali</option>
  <!-- Add more options as needed -->
</select>

<label for="standardFilter">Standard:</label>
<select id="standardFilter" onchange="filterData()">
  <option value="">All</option>
  <option value="Play Group">Play Group</option>
  <option value="Nursery">Nursery</option>
  <option value="Jr. KG">Jr. KG</option>
  <option value="Sr. KG">Sr. KG</option>
  <!-- Add more options as needed -->
</select>

<div class="childname">
  <label for="childNameFilter">Student Name:</label>
  <input type="text" id="childNameFilter" placeholder="Enter student name" oninput="filterData()">
</div>

<br>

<table id="data-table">
  <thead>
    <tr>
      <th>Student Name</th>
      <th>Branch</th>
      <th>Standard</th>
      <th>Email</th>
      <th>WhatsApp no.</th>
      <th>Total Fees</th>
      <th>Fees Paid</th>
      <th>Remaining Fees</th>
      <th>Action</th>
      <th>Receipt</th>
    </tr>
  </thead>
  <tbody>
    <% admissions.forEach(function(admission) { %>
      <tr>
        <td class="editable" contenteditable="true" data-id="<%= admission.id %>" data-field="childname">
          <%= admission.childname %>
        </td>
        <td>
          <%= admission.branch %>
        </td>
        <td>
          <%= admission.standard %>
        </td>
        <td>
          <%= admission.email %>
        </td>
        <td>
          <%= admission.whatsapp %>
        </td>
        <td class="editable" contenteditable="true" data-id="<%= admission.id %>" data-field="totalFees">
          <%= admission.totalFees %>
        </td>
        <td class="editable" contenteditable="true" data-id="<%= admission.id %>" data-field="feespaid">
          <%= admission.feespaid %>
        </td>
        <td class="editable" contenteditable="true" data-id="<%= admission.id %>" data-field="remainingFees">
          <%= admission.totalFees - admission.feespaid %>
        </td>
        <td>
          <button class="update" onclick="updateData('<%= admission.id %>')">Update</button>
        </td>
        <td>
          <button  class="generate" onclick="generateReceipt('<%= admission.childname %>', '<%= admission.branch %>', '<%= admission.standard %>', '<%= admission.email %>', '<%= admission.whatsapp %>', '<%= admission.totalFees %>','<%= admission.feespaid %>')">Generate Receipt</button>
        </td>
      </tr>
    <% }); %>
  </tbody>
</table>
<br>
<button class="revenue" onclick="sumFees()">Calculate Revenue</button>
<div id="fees-summary"></div>
<br>

<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/vfs_fonts.js"></script>
<script src="/script/updateData.js"></script>
<script>
  function filterData(admissions) {
    var branchFilter = document.getElementById('branchFilter').value.trim().toLowerCase();
    var standardFilter = document.getElementById('standardFilter').value.trim().toLowerCase();
    var childNameFilter = document.getElementById('childNameFilter').value.trim().toLowerCase();
    var rows = document.querySelectorAll('#data-table tbody tr');

    for (var i = 0; i < rows.length; i++) {
      var row = rows[i];
      var childName = row.getElementsByTagName('td')[0].innerText.trim().toLowerCase();
      var branch = row.getElementsByTagName('td')[1].innerText.trim().toLowerCase();
      var standard = row.getElementsByTagName('td')[2].innerText.trim().toLowerCase();

      if ((branchFilter && branch !== branchFilter) || (standardFilter && standard !== standardFilter) || (childNameFilter && childName.indexOf(childNameFilter) === -1)) {
        row.style.display = 'none';
      } else {
        row.style.display = '';
      }
    }
  }

  function sumFees() {
    var totalFeesSum = 0;
    var feesPaidSum = 0;
    var rows = document.querySelectorAll('#data-table tbody tr');

    for (var i = 0; i < rows.length; i++) {
      var row = rows[i];
      var totalFeesCell = row.getElementsByTagName('td')[5];
      var feesPaidCell = row.getElementsByTagName('td')[6];
      var totalFees = parseInt(totalFeesCell.innerText);
      var feesPaid = parseInt(feesPaidCell.innerText);

      if (!isNaN(totalFees)) {
        totalFeesSum += totalFees;
      }

      if (!isNaN(feesPaid)) {
        feesPaidSum += feesPaid;
      }
    }

    var summaryDiv = document.getElementById('fees-summary');
    summaryDiv.innerText = "Total Fees: " + totalFeesSum + ", Fees Paid: " + feesPaidSum;
  }

  function generateReceipt(childName, branch, standard, email, whatsapp, totalFees, feesPaid) {
  // Calculate remaining fees
  var remainingFees = totalFees - feesPaid;

  // Create the PDF content definition
  var docDefinition = {
    content: [
      { text: 'KIDS CONCEPTS', style: 'header' },
      { text: 'Receipt for Admission', style: 'subheader' },
      '\n',
      { text: 'Child Name:', style: 'label' },
      { text: childName },
      { text: 'Branch:', style: 'label' },
      { text: branch },
      { text: 'Standard:', style: 'label' },
      { text: standard },
      { text: 'Email:', style: 'label' },
      { text: email },
      { text: 'WhatsApp no.:', style: 'label' },
      { text: whatsapp },
      { text: 'Total Fees:', style: 'label' },
      { text: totalFees },
      { text: 'Fees Paid:', style: 'label' },
      { text: feesPaid },
      { text: 'Remaining Fees:', style: 'label' },
      { text: remainingFees }
    ],
    styles: {
      header: {
        fontSize: 24,
        bold: true,
        alignment: 'center',
        margin: [0, 0, 0, 20] // Add margin at the bottom
      },
      subheader: {
        fontSize: 18,
        bold: true,
        alignment: 'center',
        margin: [0, 20, 0, 20]
      },
      label: {
        bold: true,
        margin: [0, 5, 0, 2],
        fillColor: '#F2F2F2', // Set background color
        border: [false, false, false, true], // Add bottom border
        margin: [0, 2, 0, 5], // Adjust margin
        paddingLeft: 5 // Add left padding
      }
    }
  };

  // Generate the PDF document
  var pdfDoc = pdfMake.createPdf(docDefinition);

  // Save the PDF document with the child's name as the filename
  pdfDoc.getBlob(function(blob) {
    var filename = childName.replace(/[^a-z0-9]/gi, '_') + '.pdf';
    saveAs(blob, filename);
  });
}

</script>
